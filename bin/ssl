#!/usr/local/bin/lispscript
; vi: ft=lisp


(defparams *debug-p* *keep-p* *is-encrypted* *secure-p* *out-override*)

(defvar *cmdfmt* "openssl aes-256-cbc ~A -pbkdf2 -iter 60000 -in ~A -out ~A")


(def-cli-args "ssl" "-[hdks] [-o FILENAME] AFILE"
  "use openssl's aes-256 encryption to encrypt or decrypt files.
   Will decide encrypt' or 'decrypt' based on whether file ends in '.aes'"
   (option "-h" "--help" "print usage"
           (print-usage!))
   (option "-d" "--dry-run" "dry run (print commands but don't to anything"
           (setq *debug-p* t)
           (process-args! (cdr args!)))
   (option "-k" "--keep" "DO NOT remove the input file"
           (setq *keep-p* t)
           (process-args! (cdr args!)))
   (option "-s" "--secure" "securely delete file with srm (only unencrypted one)"
           (setq *keep-p* nil)
           (setq *secure-p* t)
           (process-args! (cdr args!)))
   (option "-o" "--override-output" "override default output behavior"
            (setq *out-override* (cadr args!))
            (process-args! (cddr args!)))
   )

(process-args! (cdr (cmdargs)))


« (defvar *file* Ø (car bare-args!))
    or die "no input file given" »


(defun is-encrypted-p (file)
  (~m file "\\.aes$"))

(setq *is-encrypted* (is-encrypted-p *file*))


(defvar *thecmd* (format nil *cmdfmt*
                         (if *is-encrypted* "-d" "")
                         *file*
                         (if *out-override*
                           *out-override*
                           (if *is-encrypted*
                             (~r *file* "\\.aes$" "")
                             (format nil "~A.aes" *file*)))))

(zsh *thecmd* :echo t :dry-run *debug-p*)

(unless *debug-p*
  (unless *keep-p*
    (if (and (not *is-encrypted*) *secure-p*)
      (zsh (format nil "srm -D ~A" *file*) :echo t)
      (zsh (format nil "/bin/rm ~A" *file*) :echo t))))


; vi: ft=lisp
