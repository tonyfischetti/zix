#!/usr/local/bin/lispscript
; vi: ft=lisp

(setq *print-readably* nil)
(setq *clix-curly-test* #'string=)

(defparameter *parsed* nil)
(defconstant +DIR+ (format nil "~A/bookmarkbackups" (zsh "echo $FIREFOXPROFILE")))

(defconstant +PARTFN+  (zsh (format nil "ls ~A | sort -nr | head -n1" +DIR+)))
(defconstant +FULLFN+ (format nil "~A/~A" +DIR+ +PARTFN+))

(defconstant +TMPFILE+ (format nil "tmp~A" (get-unix-time)))


(zsh (format nil "dejsonlz4 ~A > ~A" +FULLFN+ +TMPFILE+))

(setq *parsed* (parse-json (slurp +TMPFILE+)))

(zsh (format nil "rm ~A" +TMPFILE+))

(setq *parsed* (-<> *parsed*
                    {<> "children"}
                    (car <>)
                    {<> "children"}))


(defparameter *indent* "")


(defun print-aref (title url astream)
  (print-html-indent astream)
  (format astream •~A<a href="~A">~A</a><br>~%• *indent* url title))

(defun print-html-indent (astream)
  (loop for i from 1 to (length *indent*) do (format astream "&nbsp;")))


(defun handle-folder (alist thetitle astream)
  (let ((*indent* *indent*))
    (print-html-indent astream)
    (format astream "~A<b>~A</b><br>~%" *indent* thetitle)
    (for-each alist
      (if (string= {value! "type"} "text/x-moz-place-container")
        (progn
          (let ((*indent* (format nil "~A  " *indent*)))
            (handle-folder {value! "children"} {value! "title"} astream)))
        (progn
          (let ((url            {value! "uri"})
                (title          {value! "title"})
                (*indent*       (format nil "~A    " *indent*)))
            (print-aref title url astream)))))
    (format astream "<br>~%")))

(with-a-file "bookmarks.html" :w
  (format stream! "<html>~%<title>Tony's Bookmarks</title>~%<body>~%<h1>Tony Fischetti's Bookmarks</h1>~%")
  (format stream! "generated on: ~A<br><br><br>~%~%" (make-pretty-time (get-unix-time)))
  (for-each *parsed*
    (let ((thettype       {value! "type"}))
      (when (string= thettype  "text/x-moz-place-separator")
        (continue!))
      (when (string= thettype "text/x-moz-place-container")
        (handle-folder {value! "children"} {value! "title"} stream!))))
  (format stream! "~%</body>~%</html>~%"))


; vi: ft=lisp
